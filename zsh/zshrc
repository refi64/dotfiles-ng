# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
#
[[ -n "$XDG_RUNTIME_DIR" ]] || export XDG_RUNTIME_DIR=/run/user/$UID

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.local/share/oh-my-zsh"

# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="agnoster"

# Set list of themes to load
# Setting this variable when ZSH_THEME=random
# cause zsh load theme from this variable instead of
# looking in ~/.oh-my-zsh/themes/
# An empty array have no effect
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
ZSH_CUSTOM="$HOME/.local/share/oh-my-zsh-custom"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  git
  zsh-syntax-highlighting
  zsh-autosuggestions
  nix-shell
)

if [ -e $ZSH_CUSTOM/plugins/bk-zsh ]; then
  plugins+=(bk-zsh)
  BK_ZSH_P9K_INTEGRATION=true
  BK_ZSH_SHOW_SAME_BRANCH=true
fi

source $ZSH/oh-my-zsh.sh

fpath+=$HOME/.config/zsh-completions

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

if hash exa 2>/dev/null; then
  alias l='exa -F'
  alias ll='exa -Fl --git'
  alias la='exa -Fa'
else
  alias l='ls -F'
  alias ll='ls -Fl'
  alias la='ls -Fa'
fi

alias ip='ip -c'

# hash bk 2>/dev/null || alias bk=org.bitkeeper.BitKeeper

setopt extendedglob

export PATH=$HOME/bin:$HOME/cloud/bin:/var/lib/bluecap/exports/bin:$HOME/.local/share/flatpak/exports/bin:/var/lib/flatpak/exports/bin:$HOME/.cargopak/bin:$HOME/.local/bin:$HOME/.cargo/bin:$HOME/.yarn/bin:$HOME/Android/Sdk/platform-tools:$PATH:$HOME/depot_tools:$HOME/code/netpull/bazel-bin:$HOME/.pub-cache/bin:$HOME/go/bin:$HOME/dart/bin:$HOME/flutter/bin:$HOME/crystal/bin
if [[ -d /usr/lib/dart/bin ]]; then
  export PATH="$PATH:/usr/lib/dart/bin"
fi
# hash io.howl.Editor &>/dev/null && export EDITOR=io.howl.Editor ||:
hash code &>/dev/null && export EDITOR='code -w' ||:
export ANDROID_HOME=$HOME/Android/Sdk
hash flutter &>/dev/null || alias flutter=io.flutter.Flutter
alias heroku=com.heroku.Heroku

export KUBECONFIG=$HOME/cloud/auth/do/config.yaml

export ANDROID_NDK=$HOME/Android/Sdk/ndk-bundle
export ANDROID_NDK_HOME=$ANDROID_NDK

#hash nvim &>/dev/null || alias nvim=io.neovim.nvim

haste() { a=$(cat); curl -X POST -s -d "$a" https://hastebin.com/documents | awk -F '"' '{print "https://hastebin.com/"$4}'; }

POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND=white
#POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=()
POWERLEVEL9K_VCS_SHOW_SUBMODULE_DIRTY=false
POWERLEVEL9K_MODE='nerdfont-complete'
#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(context dir custom_wine custom_nix virtualenv vcs)
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(status context dir custom_wine custom_nix virtualenv vcs)
POWERLEVEL9K_CUSTOM_WINE="[ -n \"\$WINEPREFIX\" ] && echo 🍷 \$WINEPREFIX | sed \"s|^\$HOME|~|\""
POWERLEVEL9K_CUSTOM_WINE_BACKGROUND=blue
POWERLEVEL9K_CUSTOM_WINE_FOREGROUND=black
POWERLEVEL9K_CUSTOM_NIX="[ -n \"\$IN_NIX_SHELL\" ] && echo ❄ \${NIX_SHELL_PACKAGES:-\$name}"
POWERLEVEL9K_CUSTOM_NIX_BACKGROUND=blue
POWERLEVEL9K_CUSTOM_NIX_FOREGROUND=black
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_VCS_BACKENDS=(git hg)
if [ -e $ZSH_CUSTOM/plugins/bk-zsh ]; then
  POWERLEVEL9K_VCS_BACKENDS+=(bk)
fi
# POWERLEVEL9K_SHOW_CHANGESET=true
source ~/.local/share/powerlevel10k/powerlevel10k.zsh-theme

#[ -d $HOME/perl5/lib/perl5 ] && eval $(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib) ||:

export CC=clang
export CXX=clang++
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3

virtualenvwrapper() {
  . ~/.local/bin/virtualenvwrapper.sh
}

export PATH="$PATH:/home/ryan/.dotnet/tools"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/var/home/ryan/google-cloud-sdk/path.zsh.inc' ]; then . '/var/home/ryan/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/var/home/ryan/google-cloud-sdk/completion.zsh.inc' ]; then . '/var/home/ryan/google-cloud-sdk/completion.zsh.inc'; fi

export NIX_IGNORE_SYMLINK_STORE=1

export ANSIBLE_FORCE_COLOR=true

export PLAN9=/home/ryan/code/plan9port
export PATH=$PATH:$PLAN9/bin

export BK_HOST=refi64.com
export BK_USER=ryan

export LINUX_SOURCEKIT_LIB_PATH=/usr/libexec/swift/lib/libsourcekitdInProc.so

pywork() {
  . ~/.local/bin/virtualenvwrapper.sh

  if [ -d "$HOME/.virtualenvs/$1" ]; then
    workon "$1"
  else
    mkvirtualenv "$1" -p python$2
  fi

  export MYPY_PATH="$(python3 -c 'import sys; print(":".join(sys.path[1:]))')"
}
if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

export ERL_AFLAGS="-kernel shell_history enabled"

export NVM_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

#[ -d ~/code/emsdk ] && . ~/code/emsdk/emsdk_env.sh 2>/dev/null
